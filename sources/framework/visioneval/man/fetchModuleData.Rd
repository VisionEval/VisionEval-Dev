% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module.R
\name{fetchModuleData}
\alias{fetchModuleData}
\title{Returns the datasets that a module requires.}
\usage{
fetchModuleData(ModuleName, PackageName, Year, Geo = NULL)
}
\arguments{
\item{ModuleName}{a string identifying the name of the module.}

\item{PackageName}{a string identifying the name of the package that the
module is in.}

\item{Year}{a string identifying the model run year to retrieve the data
for.}

\item{Geo}{a string identifying the geography to retrieve the data for if
the module's 'RunBy' specification is not 'Region'. This argument is
omitted if the 'RunBy' specification is 'Region'.}
}
\value{
A list in standardized form containing all the datasets required by
a module to run.
}
\description{
\code{fetchModuleData} a visioneval framework module developer function
that fetches from the datastore a complete list of all the data required
by a module to run.
}
\details{
The purpose of this function is to help module developers with debugging
modules during a model run. It is not uncommon for a new module to fail
during a module run due to an edge case that was not thought of during
module development. In such circumstances, it can be difficult to determine
the cause of the error without stepping though the module code; and to do
that requires creating from the datastore the datasets which cause the error
to occur. This function fetches the datasets from the datastore and returns
them in the form they are required to be in to run the module.
}
