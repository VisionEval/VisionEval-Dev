% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QueryDatastore.R
\name{summarizeDatasets}
\alias{summarizeDatasets}
\title{Summarize the values in a table dataset according to the values in another
dataset in the table.}
\usage{
summarizeDatasets(Expr, Units_, By_ = NULL, Breaks_ls = NULL, Table,
  Key = NULL, Group, QueryPrep_ls)
}
\arguments{
\item{Expr}{a string specifying an R language expression to use to summarize
the datasets. Operands in the expression are the names of datasets to use
to create the summary.The only functions that may be used  in the
expression are 'sum', 'count', 'mean', 'wtmean' (weighted mean), 'median',
'min' (minimum), and 'max' (maximum).  The following operators may also be
used in the expression: '+', '-', '*', and '/'.  The calculation can
include data indexing (subsetting) expressions that can include the
following logical comparisons and conjunctions: '==', '>=', '<=', '!=',
'>', '<', '&', '|'. String values in a comparison must be surrounded by
single quotes (e.g. 'Urban') rather than double quotes. Note that if the
expression involves the calculation from datasets in different tables and
if those are not merged using keys (see 'Key' below), only summations are
allowed in the expression ('sum', '+').}

\item{Units_}{a named character vector identifying the units to be used for
each operand in 'Expr' and each 'By_' dataset. The element names
are the operands identified in the expression and any dataset names
identified in the 'By_' argument. The element values are the units that the
data are to be converted to when retrieved from the datastore. If no
conversion is required (i.e. retaining the units as they are in the
datastore), set the value equal to "". The specified units value for a
dataset must be consistent with the data type of the dataset. Note that the
'documentDatastoreTables' function can be used to document all the datasets
in a datastore including their unit.}

\item{By_}{an optional character vector identifying the names of the datasets
to use for grouping the expression calculation. The default value is NULL
(no grouping is done). If one dataset is identified, the function returns a
vector of values by group. If two datasets are identified, the function
returns a matrix of values with rows corresponding to groups of the first
listed dataset and the columns corresponding to groups of the second listed
dataset. No more than 2 datasets may be listed. Note that if an non-integer
numeric dataset is to be used for grouping, values for splitting the
values into categories must be specified in the 'Breaks_ls' argument.}

\item{Breaks_ls}{a named list of vectors identifying the values to use for
splitting numeric datasets into categories. This parameter is optional
unless one or more datasets specified for the 'By_' parameter contain
non-integer numeric values. The names of the list components must be the
same as names of the numeric datasets identified in the 'By_' vector. Each
named component of the list is a vector of values to be used to split the
respective By dataset into groups. Minimum and maximum values do not need
to be specified as they are computed from the dataset.}

\item{Table}{a string or named list identifying the datastore table(s) where
the datasets identified in the 'Expr' argument and 'By_' argument are
located. If all datasets are located in the same table, then the value of
'Table' should be a string. If the datasets are located in more than one
table, then the value of 'Table' must be a named list where the names are
the names of the tables where the datasets are located and the respective
values are character vectors identifying the names of the datasets located
in each of the tables. Note that if the 'By_' argument is not NULL and no
keys for merging table datasets are identified (see 'Key' below) then the
datasets identified in the 'By_' argument must be included in the
identification of datasets for every table. However, if keys for merging
table datasets are identified, then each dataset identified in the 'By_'
argument can't be listed for more than one table.}

\item{Key}{a optional parameter that may be either a string or named list.
This parameter is used to identify keys to be used for merging datasets
located in different datastore tables. If one key is used to merge all the
table datasets then that key is specified as a string. If datasets from
more than 2 tables are to be merged and more than one key is to be used to
merge the table datasets, then the keys must be specified as a named list
where the component names are the names of the datasets to be used as keys
and the each value is a character vector containing the names of the tables
to be joined with the named key. Only the following keys may be used to
join table datasets: 'Marea', 'Azone', 'Bzone', 'HhId'.}

\item{Group}{a string identifying the datastore group where the dataset is
located.}

\item{QueryPrep_ls}{a list created by calling the prepareForDatastoreQuery
function which identifies the datastore location(s), listing(s), and
functions for listing and read the datastore(s).}
}
\value{
If the By_ argument is NULL or has a length of 1, the value of the
  specified expression is calculated. Note that if the expression produces a
  vector of more than one number the entire vector of numbers will be
  returned. Users should check their expression to confirm that it will
  produce a single number if that is what is desired. Assuming that the
  expression produces a single value, if the 'By_' argument only identifies
  one dataset to use for grouping, the function will return a vector of
  values. If the 'By_' argument identifies two grouping datasets, the
  function will return a matrix of values.
}
\description{
\code{summarizeDataset} summarize the values in a table dataset according to
the values in another dataset in the table.
}
\details{
This function is used to calculate summary measures from one or more
datasets in a model datastore. The calculation of a summary measure is
specified as an R language expression in the form of a double-quoted string.
This expression can summarize datasets using sum, count, mean, weighted mean,
median, min, and max functions. The values of datasets and/or dataset
summaries may be combined using ordinary arithmetic operations (+, -, *, /).
Datasets may be indexed (subsetted) using the standard square brackets
notation. Logical comparators and conjunctions can be used for indexing. The
calculations can combine datasets from different tables in the datastore.
This can be done by merging the datasets into one table using specified keys
and applying the specified expression to the merged table. Datasets in
different tables can also be combined by summing each to a common geography
and then adding the respective sums.
}
